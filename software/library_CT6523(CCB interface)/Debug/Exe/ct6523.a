;#include "ct6523.h"
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;#ifdef CV
;#include <delay.h>
;#define _delay_ms delay_ms
;#define _delay_us delay_us
;
;#else
;#include <avr/delay.h>
;#endif
;
;unsigned char lcd_buf[20];//={0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff, ...
;
;void portsInit (void)
; 0001 000F {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0001 0010 
; 0001 0011    //сконфигурируем ножки как выходы
; 0001 0012    DD_LC_PORT |= (1<<CE) | (1<<CL) | (1<<DI);
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0001 0013    DD_LC_PORT &=~(1<<DO);
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0001 0014 
; 0001 0015    //Ставим все ножки выходов в 1. Это означает,
; 0001 0016    // что будет использоваться протокол с CL по умолчанию =1.
; 0001 0017    //На DO подключим нагрузочный резистор.
; 0001 0018    LC_PORT = (1<<CL) | (1<<DO);
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0001 0019    CE_LOW();
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0001 001A }
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;
;///////////////////////////////
;static void BusPause(void)
; 0001 001E {
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0001 001F    _delay_us(8);
;PCODE: $0000001C VOL: 0
; 0001 0020    return;
;PCODE: $0000001D VOL: 0
; 0001 0021 }
;PCODE: $0000001E VOL: 0
;
;///////////////////
;static void BusStrob(void)
; 0001 0025 {
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0001 0026       CL_LOW();
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0001 0027               BusPause();
;PCODE: $00000023 VOL: 0
; 0001 0028        CL_HIGH();
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0001 0029    BusPause();
;PCODE: $00000026 VOL: 0
; 0001 002A        //SetBit(BUS_Port,BUS_BitClc);
; 0001 002B 
; 0001 002C }
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;
;///////////////////////////
;// Выводит байт на шину DI микросхемы LC72131, старший бит идет первым.
;void BusOutH2L(u8 Bus)
; 0001 0031 {
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0001 0032    u8 i;
; 0001 0033 
; 0001 0034    for(i=0; i < 8; i++)
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;	Bus -> Y+1
;	i -> R17
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0001 0035    {
; 0001 0036 
; 0001 0037    BusPause();
;PCODE: $00000036 VOL: 0
; 0001 0038           if(Bus & 0x80)
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0001 0039          DI_HIGH();     //SetBit(BUS_Port,BUS_BitDat);
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0001 003A       else
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0001 003B          DI_LOW();      //ClrBit(BUS_Port,BUS_BitDat);
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0001 003C       CL_LOW();
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0001 003D               BusPause();
;PCODE: $00000043 VOL: 0
; 0001 003E        CL_HIGH();
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0001 003F       Bus <<= 1;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0001 0040    }
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0001 0041    _delay_us(8);
;PCODE: $0000004E VOL: 0
; 0001 0042    return;
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0001 0043 }
;PCODE: $00000053 VOL: 0
;
;///////////////////////////
;// Выводит байт на шину DI микросхемы LC72131, младший бит идет первым.
;void BusOutL2H(u8 Bus)
; 0001 0048 {
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0001 0049    u8 i;
; 0001 004A 
; 0001 004B 
; 0001 004C 
; 0001 004D    for(i=0; i < 8; i++)
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;	Bus -> Y+1
;	i -> R17
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0001 004E    {
; 0001 004F 
; 0001 0050          BusPause();
;PCODE: $00000061 VOL: 0
; 0001 0051           if(Bus & 0x01)
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0001 0052          DI_HIGH();     //SetBit(BUS_Port,BUS_BitDat);
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0001 0053       else
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0001 0054          DI_LOW();      //ClrBit(BUS_Port,BUS_BitDat);
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
; 0001 0055       CL_LOW();
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0001 0056               BusPause();
;PCODE: $0000006E VOL: 0
; 0001 0057        CL_HIGH();
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0001 0058       Bus >>= 1;
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0001 0059    }
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0001 005A    _delay_us(8);
;PCODE: $00000079 VOL: 0
; 0001 005B    return;
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0001 005C }
;PCODE: $0000007E VOL: 0
;
;/////////////////////////////
;//// Читает байт с шины DO микросхемы LC72131, старший бит идет первым.
;//void BusInH2L(u8* Bus)
;//{
;//   u8 i;
;//
;//   for(i=0; i < 8; i++)
;//   {
;//      (*Bus) <<= 1;
;//      if (DO_STATE())
;//         (*Bus) |= 0x01;
;//      BusStrob();
;//   }
;//   return;
;//}
;//
;/////////////////////////////
;//// Читает байт с шины DO микросхемы LC72131, младший бит идет первым.
;//void BusInL2H(u8* Bus)
;//{
;//   u8 i;
;//
;//   for(i=0; i < 8; i++)
;//   {
;//      (*Bus) >>= 1;
;//      if (DO_STATE())
;//         (*Bus) |= 0x80;
;//      BusStrob();
;//   }
;//   return;
;//}
;//
;//void lc75853n_key_scan(void){
;// unsigned char i,ret;
;// BusOutL2H(MODE_OUT_ADR);
;//BusPause();
;//CE_HIGH();
;//BusPause();
;//for (i=0;i<4;i++){
;// BusInH2L(&ret);
;// lcd_key[i]=ret;
;// }
;//CE_LOW();
;//BusPause();
;//}
;
;void ct6523_set_bit(unsigned char _bit){
; 0001 008C void ct6523_set_bit(unsigned char _bit){
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
; 0001 008D unsigned char i,d;
; 0001 008E if (_bit<152){
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;	_bit -> Y+2
;	i -> R17
;	d -> R16
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0001 008F i=_bit/8;
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0001 0090 d=_bit%8;
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0001 0091 lcd_buf[i]|=(1<<d);
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0001 0092 } else
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0001 0093     {
; 0001 0094 _bit-=152;
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0001 0095 i=_bit/8;
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
; 0001 0096 d=_bit%8;
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
; 0001 0097 lcd_buf[19]|=(1<<(d+4))|0b1101;
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
; 0001 0098 
; 0001 0099 
; 0001 009A }
;PCODE: $000000AF VOL: 0
; 0001 009B send_lcd_bufer();
;PCODE: $000000B0 VOL: 0
; 0001 009C }
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;
;void ct6523_clr_bit(unsigned char _bit){
; 0001 009E void ct6523_clr_bit(unsigned char _bit){
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
; 0001 009F unsigned char i,d;
; 0001 00A0 if (_bit<152){
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;	_bit -> Y+2
;	i -> R17
;	d -> R16
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
; 0001 00A1 i=_bit/8;
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
; 0001 00A2 d=_bit%8;
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
; 0001 00A3 lcd_buf[i]&=~(1<<d);
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
; 0001 00A4 } else
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
; 0001 00A5     {
; 0001 00A6 _bit-=152;
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
; 0001 00A7 i=_bit/8;
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
; 0001 00A8 d=_bit%8;
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
; 0001 00A9 lcd_buf[19]&=(~(1<<(d+4)))|0b1101;
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
; 0001 00AA 
; 0001 00AB 
; 0001 00AC }
;PCODE: $000000EA VOL: 0
; 0001 00AD send_lcd_bufer();
;PCODE: $000000EB VOL: 0
; 0001 00AE }
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;
;
;void send_lcd_bufer(void){
; 0001 00B1 void send_lcd_bufer(void){
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
; 0001 00B2 unsigned char i;
; 0001 00B3 BusOutH2L(MODE_IN_ADR);
;PCODE: $000000F5 VOL: 0
;	i -> R17
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
; 0001 00B4 //_delay_us(
; 0001 00B5 BusPause();
;PCODE: $000000F8 VOL: 0
; 0001 00B6 CE_HIGH();
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
; 0001 00B7 BusPause();
;PCODE: $000000FB VOL: 0
; 0001 00B8  for (i=0;i<20;i++){
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
; 0001 00B9    BusOutH2L(lcd_buf[i]);
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
; 0001 00BA  }
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
; 0001 00BB CE_LOW();
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
; 0001 00BC DI_LOW();
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
; 0001 00BD BusPause();
;PCODE: $00000113 VOL: 0
; 0001 00BE 
; 0001 00BF }
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;
;void ct6523_init(void){
; 0001 00C1 void ct6523_init(void){
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
; 0001 00C2 portsInit();
;PCODE: $00000119 VOL: 0
; 0001 00C3 };
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
