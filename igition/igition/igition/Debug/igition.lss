
igition.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000045e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000007  00800060  00800060  000004d2  2**0
                  ALLOC
  2 .comment      00000030  00000000  00000000  000004d2  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000048  00000000  00000000  00000502  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   000001fb  00000000  00000000  0000054a  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000127  00000000  00000000  00000745  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000001bd  00000000  00000000  0000086c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  000000fc  00000000  00000000  00000a2c  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000001bb  00000000  00000000  00000b28  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000001bb  00000000  00000000  00000ce3  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000038  00000000  00000000  00000e9e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	22 c0       	rjmp	.+68     	; 0x48 <__vector_1>
   4:	20 c0       	rjmp	.+64     	; 0x46 <__bad_interrupt>
   6:	1f c0       	rjmp	.+62     	; 0x46 <__bad_interrupt>
   8:	1e c0       	rjmp	.+60     	; 0x46 <__bad_interrupt>
   a:	1d c0       	rjmp	.+58     	; 0x46 <__bad_interrupt>
   c:	6a c0       	rjmp	.+212    	; 0xe2 <__vector_6>
   e:	88 c0       	rjmp	.+272    	; 0x120 <__vector_7>
  10:	a4 c0       	rjmp	.+328    	; 0x15a <__vector_8>
  12:	19 c0       	rjmp	.+50     	; 0x46 <__bad_interrupt>
  14:	18 c0       	rjmp	.+48     	; 0x46 <__bad_interrupt>
  16:	ac c0       	rjmp	.+344    	; 0x170 <__vector_11>
  18:	16 c0       	rjmp	.+44     	; 0x46 <__bad_interrupt>
  1a:	15 c0       	rjmp	.+42     	; 0x46 <__bad_interrupt>
  1c:	14 c0       	rjmp	.+40     	; 0x46 <__bad_interrupt>
  1e:	13 c0       	rjmp	.+38     	; 0x46 <__bad_interrupt>
  20:	12 c0       	rjmp	.+36     	; 0x46 <__bad_interrupt>
  22:	11 c0       	rjmp	.+34     	; 0x46 <__bad_interrupt>
  24:	10 c0       	rjmp	.+32     	; 0x46 <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_clear_bss>:
  32:	20 e0       	ldi	r18, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	01 c0       	rjmp	.+2      	; 0x3c <.do_clear_bss_start>

0000003a <.do_clear_bss_loop>:
  3a:	1d 92       	st	X+, r1

0000003c <.do_clear_bss_start>:
  3c:	a7 36       	cpi	r26, 0x67	; 103
  3e:	b2 07       	cpc	r27, r18
  40:	e1 f7       	brne	.-8      	; 0x3a <.do_clear_bss_loop>
  42:	a0 d0       	rcall	.+320    	; 0x184 <main>
  44:	0a c2       	rjmp	.+1044   	; 0x45a <_exit>

00000046 <__bad_interrupt>:
  46:	dc cf       	rjmp	.-72     	; 0x0 <__vectors>

00000048 <__vector_1>:

float koof;
unsigned int time;
unsigned char igt=0;

ISR(INT0_vect){
  48:	1f 92       	push	r1
  4a:	0f 92       	push	r0
  4c:	0f b6       	in	r0, 0x3f	; 63
  4e:	0f 92       	push	r0
  50:	11 24       	eor	r1, r1
  52:	2f 93       	push	r18
  54:	3f 93       	push	r19
  56:	4f 93       	push	r20
  58:	5f 93       	push	r21
  5a:	6f 93       	push	r22
  5c:	7f 93       	push	r23
  5e:	8f 93       	push	r24
  60:	9f 93       	push	r25
  62:	af 93       	push	r26
  64:	bf 93       	push	r27
  66:	ef 93       	push	r30
  68:	ff 93       	push	r31
	PORTB^=(1<<3);
  6a:	98 b3       	in	r25, 0x18	; 24
  6c:	88 e0       	ldi	r24, 0x08	; 8
  6e:	89 27       	eor	r24, r25
  70:	88 bb       	out	0x18, r24	; 24
	TCCR1B=0x05;
  72:	85 e0       	ldi	r24, 0x05	; 5
  74:	8e bd       	out	0x2e, r24	; 46
	time=TCNT1;
  76:	8c b5       	in	r24, 0x2c	; 44
  78:	9d b5       	in	r25, 0x2d	; 45
  7a:	90 93 62 00 	sts	0x0062, r25
  7e:	80 93 61 00 	sts	0x0061, r24
	TCNT1=0;
  82:	1d bc       	out	0x2d, r1	; 45
  84:	1c bc       	out	0x2c, r1	; 44
	OCR1A=time/koof;
  86:	60 91 61 00 	lds	r22, 0x0061
  8a:	70 91 62 00 	lds	r23, 0x0062
  8e:	80 e0       	ldi	r24, 0x00	; 0
  90:	90 e0       	ldi	r25, 0x00	; 0
  92:	55 d1       	rcall	.+682    	; 0x33e <__floatunsisf>
  94:	20 91 63 00 	lds	r18, 0x0063
  98:	30 91 64 00 	lds	r19, 0x0064
  9c:	40 91 65 00 	lds	r20, 0x0065
  a0:	50 91 66 00 	lds	r21, 0x0066
  a4:	b8 d0       	rcall	.+368    	; 0x216 <__divsf3>
  a6:	1f d1       	rcall	.+574    	; 0x2e6 <__fixunssfsi>
  a8:	7b bd       	out	0x2b, r23	; 43
  aa:	6a bd       	out	0x2a, r22	; 42
	if (time<540) igt=64;
  ac:	80 91 61 00 	lds	r24, 0x0061
  b0:	90 91 62 00 	lds	r25, 0x0062
  b4:	8c 31       	cpi	r24, 0x1C	; 28
  b6:	92 40       	sbci	r25, 0x02	; 2
  b8:	18 f4       	brcc	.+6      	; 0xc0 <__vector_1+0x78>
  ba:	80 e4       	ldi	r24, 0x40	; 64
  bc:	80 93 60 00 	sts	0x0060, r24
	
}
  c0:	ff 91       	pop	r31
  c2:	ef 91       	pop	r30
  c4:	bf 91       	pop	r27
  c6:	af 91       	pop	r26
  c8:	9f 91       	pop	r25
  ca:	8f 91       	pop	r24
  cc:	7f 91       	pop	r23
  ce:	6f 91       	pop	r22
  d0:	5f 91       	pop	r21
  d2:	4f 91       	pop	r20
  d4:	3f 91       	pop	r19
  d6:	2f 91       	pop	r18
  d8:	0f 90       	pop	r0
  da:	0f be       	out	0x3f, r0	; 63
  dc:	0f 90       	pop	r0
  de:	1f 90       	pop	r1
  e0:	18 95       	reti

000000e2 <__vector_6>:

ISR(TIMER1_COMPA_vect){
  e2:	1f 92       	push	r1
  e4:	0f 92       	push	r0
  e6:	0f b6       	in	r0, 0x3f	; 63
  e8:	0f 92       	push	r0
  ea:	11 24       	eor	r1, r1
  ec:	8f 93       	push	r24
  ee:	9f 93       	push	r25
	
	asm("cli");
  f0:	f8 94       	cli
	PORTB^=(1<<3);
  f2:	98 b3       	in	r25, 0x18	; 24
  f4:	88 e0       	ldi	r24, 0x08	; 8
  f6:	89 27       	eor	r24, r25
  f8:	88 bb       	out	0x18, r24	; 24
	// Place your code here
	PORTD|=(1<<4);
  fa:	94 9a       	sbi	0x12, 4	; 18
	OCR1B=OCR1A+16;
  fc:	8a b5       	in	r24, 0x2a	; 42
  fe:	9b b5       	in	r25, 0x2b	; 43
 100:	40 96       	adiw	r24, 0x10	; 16
 102:	99 bd       	out	0x29, r25	; 41
 104:	88 bd       	out	0x28, r24	; 40
	igt++;
 106:	80 91 60 00 	lds	r24, 0x0060
 10a:	8f 5f       	subi	r24, 0xFF	; 255
 10c:	80 93 60 00 	sts	0x0060, r24
	asm("sei");
 110:	78 94       	sei
	
}
 112:	9f 91       	pop	r25
 114:	8f 91       	pop	r24
 116:	0f 90       	pop	r0
 118:	0f be       	out	0x3f, r0	; 63
 11a:	0f 90       	pop	r0
 11c:	1f 90       	pop	r1
 11e:	18 95       	reti

00000120 <__vector_7>:

ISR(TIMER1_COMPB_vect){
 120:	1f 92       	push	r1
 122:	0f 92       	push	r0
 124:	0f b6       	in	r0, 0x3f	; 63
 126:	0f 92       	push	r0
 128:	11 24       	eor	r1, r1
 12a:	8f 93       	push	r24
 12c:	9f 93       	push	r25
	
	asm("cli");
 12e:	f8 94       	cli
	// Place your code here
	PORTD&=~(1<<4);
 130:	94 98       	cbi	0x12, 4	; 18
	if (igt<=2) {
 132:	80 91 60 00 	lds	r24, 0x0060
 136:	83 30       	cpi	r24, 0x03	; 3
 138:	30 f4       	brcc	.+12     	; 0x146 <__vector_7+0x26>
		OCR1A=OCR1B+16;
 13a:	88 b5       	in	r24, 0x28	; 40
 13c:	99 b5       	in	r25, 0x29	; 41
 13e:	40 96       	adiw	r24, 0x10	; 16
 140:	9b bd       	out	0x2b, r25	; 43
 142:	8a bd       	out	0x2a, r24	; 42
 144:	02 c0       	rjmp	.+4      	; 0x14a <__vector_7+0x2a>
	}
	else igt=0;
 146:	10 92 60 00 	sts	0x0060, r1

	asm("sei");
 14a:	78 94       	sei
	
}
 14c:	9f 91       	pop	r25
 14e:	8f 91       	pop	r24
 150:	0f 90       	pop	r0
 152:	0f be       	out	0x3f, r0	; 63
 154:	0f 90       	pop	r0
 156:	1f 90       	pop	r1
 158:	18 95       	reti

0000015a <__vector_8>:

ISR(TIMER1_OVF_vect){
 15a:	1f 92       	push	r1
 15c:	0f 92       	push	r0
 15e:	0f b6       	in	r0, 0x3f	; 63
 160:	0f 92       	push	r0
 162:	11 24       	eor	r1, r1
	
	TCCR1B=0x00;
 164:	1e bc       	out	0x2e, r1	; 46
	
}
 166:	0f 90       	pop	r0
 168:	0f be       	out	0x3f, r0	; 63
 16a:	0f 90       	pop	r0
 16c:	1f 90       	pop	r1
 16e:	18 95       	reti

00000170 <__vector_11>:

ISR(USART_RXC_vect){
 170:	1f 92       	push	r1
 172:	0f 92       	push	r0
 174:	0f b6       	in	r0, 0x3f	; 63
 176:	0f 92       	push	r0
 178:	11 24       	eor	r1, r1
	
}
 17a:	0f 90       	pop	r0
 17c:	0f be       	out	0x3f, r0	; 63
 17e:	0f 90       	pop	r0
 180:	1f 90       	pop	r1
 182:	18 95       	reti

00000184 <main>:
{
// Input/Output Ports initialization
// Port B initialization
// Func7=In Func6=In Func5=In Func4=In Func3=Out Func2=In Func1=In Func0=In
// State7=T State6=T State5=T State4=T State3=0 State2=T State1=T State0=T
PORTB=0x00;
 184:	18 ba       	out	0x18, r1	; 24
DDRB=0x08;
 186:	88 e0       	ldi	r24, 0x08	; 8
 188:	87 bb       	out	0x17, r24	; 23

// Port C initialization
// Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
// State6=T State5=T State4=T State3=T State2=T State1=T State0=T
PORTC=0x00;
 18a:	15 ba       	out	0x15, r1	; 21
DDRC=0x00;
 18c:	14 ba       	out	0x14, r1	; 20

// Port D initialization
// Func7=In Func6=In Func5=In Func4=Out Func3=In Func2=In Func1=In Func0=In
// State7=T State6=T State5=T State4=0 State3=T State2=T State1=T State0=P
PORTD=0x01;
 18e:	81 e0       	ldi	r24, 0x01	; 1
 190:	82 bb       	out	0x12, r24	; 18
DDRD=0x10;
 192:	90 e1       	ldi	r25, 0x10	; 16
 194:	91 bb       	out	0x11, r25	; 17

// Timer/Counter 0 initialization
// Clock source: System Clock
// Clock value: Timer 0 Stopped
TCCR0=0x00;
 196:	13 be       	out	0x33, r1	; 51
TCNT0=0x00;
 198:	12 be       	out	0x32, r1	; 50
// Input Capture on Falling Edge
// Timer1 Overflow Interrupt: On
// Input Capture Interrupt: Off
// Compare A Match Interrupt: On
// Compare B Match Interrupt: On
TCCR1A=0x00;
 19a:	1f bc       	out	0x2f, r1	; 47
TCCR1B=0x01;
 19c:	8e bd       	out	0x2e, r24	; 46
TCNT1H=0x00;
 19e:	1d bc       	out	0x2d, r1	; 45
TCNT1L=0x00;
 1a0:	1c bc       	out	0x2c, r1	; 44
ICR1H=0x00;
 1a2:	17 bc       	out	0x27, r1	; 39
ICR1L=0x00;
 1a4:	16 bc       	out	0x26, r1	; 38
OCR1AH=0x00;
 1a6:	1b bc       	out	0x2b, r1	; 43
OCR1AL=0x00;
 1a8:	1a bc       	out	0x2a, r1	; 42
OCR1BH=0x00;
 1aa:	19 bc       	out	0x29, r1	; 41
OCR1BL=0x00;
 1ac:	18 bc       	out	0x28, r1	; 40
// Timer/Counter 2 initialization
// Clock source: System Clock
// Clock value: Timer2 Stopped
// Mode: Normal top=0xFF
// OC2 output: Disconnected
ASSR=0x00;
 1ae:	12 bc       	out	0x22, r1	; 34
TCCR2=0x00;
 1b0:	15 bc       	out	0x25, r1	; 37
TCNT2=0x00;
 1b2:	14 bc       	out	0x24, r1	; 36
OCR2=0x00;
 1b4:	13 bc       	out	0x23, r1	; 35

// External Interrupt(s) initialization
// INT0: On
// INT0 Mode: Rising Edge
// INT1: Off
GICR|=0x40;
 1b6:	8b b7       	in	r24, 0x3b	; 59
 1b8:	80 64       	ori	r24, 0x40	; 64
 1ba:	8b bf       	out	0x3b, r24	; 59
MCUCR=0x03;
 1bc:	83 e0       	ldi	r24, 0x03	; 3
 1be:	85 bf       	out	0x35, r24	; 53
GIFR=0x40;
 1c0:	80 e4       	ldi	r24, 0x40	; 64
 1c2:	8a bf       	out	0x3a, r24	; 58

// Timer(s)/Counter(s) Interrupt(s) initialization
TIMSK=0x1C;
 1c4:	8c e1       	ldi	r24, 0x1C	; 28
 1c6:	89 bf       	out	0x39, r24	; 57

// USART initialization
// USART disabled
UCSRB=0x00;
 1c8:	1a b8       	out	0x0a, r1	; 10

// Analog Comparator initialization
// Analog Comparator: Off
// Analog Comparator Input Capture by Timer/Counter 1: Off
ACSR=0x80;
 1ca:	80 e8       	ldi	r24, 0x80	; 128
 1cc:	88 b9       	out	0x08, r24	; 8
SFIOR=0x00;
 1ce:	10 be       	out	0x30, r1	; 48

// ADC initialization
// ADC disabled
ADCSRA=0x00;
 1d0:	16 b8       	out	0x06, r1	; 6

// SPI initialization
// SPI disabled
SPCR=0x00;
 1d2:	1d b8       	out	0x0d, r1	; 13

// TWI initialization
// TWI disabled
TWCR=0x00;
 1d4:	16 be       	out	0x36, r1	; 54
	koof=360/79.3;
 1d6:	88 e6       	ldi	r24, 0x68	; 104
 1d8:	95 e4       	ldi	r25, 0x45	; 69
 1da:	a1 e9       	ldi	r26, 0x91	; 145
 1dc:	b0 e4       	ldi	r27, 0x40	; 64
 1de:	80 93 63 00 	sts	0x0063, r24
 1e2:	90 93 64 00 	sts	0x0064, r25
 1e6:	a0 93 65 00 	sts	0x0065, r26
 1ea:	b0 93 66 00 	sts	0x0066, r27
asm("sei");	
 1ee:	78 94       	sei


	while(1)
	{
		if (!( (1 << PD0) & PIND)){
 1f0:	80 99       	sbic	0x10, 0	; 16
 1f2:	fe cf       	rjmp	.-4      	; 0x1f0 <main+0x6c>
			PORTD|=(1<<4);
 1f4:	94 9a       	sbi	0x12, 4	; 18
			PORTB|=(1<<3);
 1f6:	c3 9a       	sbi	0x18, 3	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1f8:	8c ec       	ldi	r24, 0xCC	; 204
 1fa:	9c e0       	ldi	r25, 0x0C	; 12
 1fc:	01 97       	sbiw	r24, 0x01	; 1
 1fe:	f1 f7       	brne	.-4      	; 0x1fc <main+0x78>
 200:	00 c0       	rjmp	.+0      	; 0x202 <main+0x7e>
 202:	00 00       	nop
			_delay_ms(4);
			PORTD&=~(1<<4);
 204:	94 98       	cbi	0x12, 4	; 18
			PORTB&=~(1<<3);
 206:	c3 98       	cbi	0x18, 3	; 24
 208:	8f ef       	ldi	r24, 0xFF	; 255
 20a:	9f e1       	ldi	r25, 0x1F	; 31
 20c:	01 97       	sbiw	r24, 0x01	; 1
 20e:	f1 f7       	brne	.-4      	; 0x20c <main+0x88>
 210:	00 c0       	rjmp	.+0      	; 0x212 <main+0x8e>
 212:	00 00       	nop
 214:	ed cf       	rjmp	.-38     	; 0x1f0 <main+0x6c>

00000216 <__divsf3>:
 216:	0c d0       	rcall	.+24     	; 0x230 <__divsf3x>
 218:	e6 c0       	rjmp	.+460    	; 0x3e6 <__fp_round>
 21a:	de d0       	rcall	.+444    	; 0x3d8 <__fp_pscB>
 21c:	40 f0       	brcs	.+16     	; 0x22e <__divsf3+0x18>
 21e:	d5 d0       	rcall	.+426    	; 0x3ca <__fp_pscA>
 220:	30 f0       	brcs	.+12     	; 0x22e <__divsf3+0x18>
 222:	21 f4       	brne	.+8      	; 0x22c <__divsf3+0x16>
 224:	5f 3f       	cpi	r21, 0xFF	; 255
 226:	19 f0       	breq	.+6      	; 0x22e <__divsf3+0x18>
 228:	c7 c0       	rjmp	.+398    	; 0x3b8 <__fp_inf>
 22a:	51 11       	cpse	r21, r1
 22c:	10 c1       	rjmp	.+544    	; 0x44e <__fp_szero>
 22e:	ca c0       	rjmp	.+404    	; 0x3c4 <__fp_nan>

00000230 <__divsf3x>:
 230:	eb d0       	rcall	.+470    	; 0x408 <__fp_split3>
 232:	98 f3       	brcs	.-26     	; 0x21a <__divsf3+0x4>

00000234 <__divsf3_pse>:
 234:	99 23       	and	r25, r25
 236:	c9 f3       	breq	.-14     	; 0x22a <__divsf3+0x14>
 238:	55 23       	and	r21, r21
 23a:	b1 f3       	breq	.-20     	; 0x228 <__divsf3+0x12>
 23c:	95 1b       	sub	r25, r21
 23e:	55 0b       	sbc	r21, r21
 240:	bb 27       	eor	r27, r27
 242:	aa 27       	eor	r26, r26
 244:	62 17       	cp	r22, r18
 246:	73 07       	cpc	r23, r19
 248:	84 07       	cpc	r24, r20
 24a:	38 f0       	brcs	.+14     	; 0x25a <__divsf3_pse+0x26>
 24c:	9f 5f       	subi	r25, 0xFF	; 255
 24e:	5f 4f       	sbci	r21, 0xFF	; 255
 250:	22 0f       	add	r18, r18
 252:	33 1f       	adc	r19, r19
 254:	44 1f       	adc	r20, r20
 256:	aa 1f       	adc	r26, r26
 258:	a9 f3       	breq	.-22     	; 0x244 <__divsf3_pse+0x10>
 25a:	33 d0       	rcall	.+102    	; 0x2c2 <__divsf3_pse+0x8e>
 25c:	0e 2e       	mov	r0, r30
 25e:	3a f0       	brmi	.+14     	; 0x26e <__divsf3_pse+0x3a>
 260:	e0 e8       	ldi	r30, 0x80	; 128
 262:	30 d0       	rcall	.+96     	; 0x2c4 <__divsf3_pse+0x90>
 264:	91 50       	subi	r25, 0x01	; 1
 266:	50 40       	sbci	r21, 0x00	; 0
 268:	e6 95       	lsr	r30
 26a:	00 1c       	adc	r0, r0
 26c:	ca f7       	brpl	.-14     	; 0x260 <__divsf3_pse+0x2c>
 26e:	29 d0       	rcall	.+82     	; 0x2c2 <__divsf3_pse+0x8e>
 270:	fe 2f       	mov	r31, r30
 272:	27 d0       	rcall	.+78     	; 0x2c2 <__divsf3_pse+0x8e>
 274:	66 0f       	add	r22, r22
 276:	77 1f       	adc	r23, r23
 278:	88 1f       	adc	r24, r24
 27a:	bb 1f       	adc	r27, r27
 27c:	26 17       	cp	r18, r22
 27e:	37 07       	cpc	r19, r23
 280:	48 07       	cpc	r20, r24
 282:	ab 07       	cpc	r26, r27
 284:	b0 e8       	ldi	r27, 0x80	; 128
 286:	09 f0       	breq	.+2      	; 0x28a <__divsf3_pse+0x56>
 288:	bb 0b       	sbc	r27, r27
 28a:	80 2d       	mov	r24, r0
 28c:	bf 01       	movw	r22, r30
 28e:	ff 27       	eor	r31, r31
 290:	93 58       	subi	r25, 0x83	; 131
 292:	5f 4f       	sbci	r21, 0xFF	; 255
 294:	2a f0       	brmi	.+10     	; 0x2a0 <__divsf3_pse+0x6c>
 296:	9e 3f       	cpi	r25, 0xFE	; 254
 298:	51 05       	cpc	r21, r1
 29a:	68 f0       	brcs	.+26     	; 0x2b6 <__divsf3_pse+0x82>
 29c:	8d c0       	rjmp	.+282    	; 0x3b8 <__fp_inf>
 29e:	d7 c0       	rjmp	.+430    	; 0x44e <__fp_szero>
 2a0:	5f 3f       	cpi	r21, 0xFF	; 255
 2a2:	ec f3       	brlt	.-6      	; 0x29e <__divsf3_pse+0x6a>
 2a4:	98 3e       	cpi	r25, 0xE8	; 232
 2a6:	dc f3       	brlt	.-10     	; 0x29e <__divsf3_pse+0x6a>
 2a8:	86 95       	lsr	r24
 2aa:	77 95       	ror	r23
 2ac:	67 95       	ror	r22
 2ae:	b7 95       	ror	r27
 2b0:	f7 95       	ror	r31
 2b2:	9f 5f       	subi	r25, 0xFF	; 255
 2b4:	c9 f7       	brne	.-14     	; 0x2a8 <__divsf3_pse+0x74>
 2b6:	88 0f       	add	r24, r24
 2b8:	91 1d       	adc	r25, r1
 2ba:	96 95       	lsr	r25
 2bc:	87 95       	ror	r24
 2be:	97 f9       	bld	r25, 7
 2c0:	08 95       	ret
 2c2:	e1 e0       	ldi	r30, 0x01	; 1
 2c4:	66 0f       	add	r22, r22
 2c6:	77 1f       	adc	r23, r23
 2c8:	88 1f       	adc	r24, r24
 2ca:	bb 1f       	adc	r27, r27
 2cc:	62 17       	cp	r22, r18
 2ce:	73 07       	cpc	r23, r19
 2d0:	84 07       	cpc	r24, r20
 2d2:	ba 07       	cpc	r27, r26
 2d4:	20 f0       	brcs	.+8      	; 0x2de <__divsf3_pse+0xaa>
 2d6:	62 1b       	sub	r22, r18
 2d8:	73 0b       	sbc	r23, r19
 2da:	84 0b       	sbc	r24, r20
 2dc:	ba 0b       	sbc	r27, r26
 2de:	ee 1f       	adc	r30, r30
 2e0:	88 f7       	brcc	.-30     	; 0x2c4 <__divsf3_pse+0x90>
 2e2:	e0 95       	com	r30
 2e4:	08 95       	ret

000002e6 <__fixunssfsi>:
 2e6:	98 d0       	rcall	.+304    	; 0x418 <__fp_splitA>
 2e8:	88 f0       	brcs	.+34     	; 0x30c <__fixunssfsi+0x26>
 2ea:	9f 57       	subi	r25, 0x7F	; 127
 2ec:	90 f0       	brcs	.+36     	; 0x312 <__fixunssfsi+0x2c>
 2ee:	b9 2f       	mov	r27, r25
 2f0:	99 27       	eor	r25, r25
 2f2:	b7 51       	subi	r27, 0x17	; 23
 2f4:	a0 f0       	brcs	.+40     	; 0x31e <__fixunssfsi+0x38>
 2f6:	d1 f0       	breq	.+52     	; 0x32c <__fixunssfsi+0x46>
 2f8:	66 0f       	add	r22, r22
 2fa:	77 1f       	adc	r23, r23
 2fc:	88 1f       	adc	r24, r24
 2fe:	99 1f       	adc	r25, r25
 300:	1a f0       	brmi	.+6      	; 0x308 <__fixunssfsi+0x22>
 302:	ba 95       	dec	r27
 304:	c9 f7       	brne	.-14     	; 0x2f8 <__fixunssfsi+0x12>
 306:	12 c0       	rjmp	.+36     	; 0x32c <__fixunssfsi+0x46>
 308:	b1 30       	cpi	r27, 0x01	; 1
 30a:	81 f0       	breq	.+32     	; 0x32c <__fixunssfsi+0x46>
 30c:	9f d0       	rcall	.+318    	; 0x44c <__fp_zero>
 30e:	b1 e0       	ldi	r27, 0x01	; 1
 310:	08 95       	ret
 312:	9c c0       	rjmp	.+312    	; 0x44c <__fp_zero>
 314:	67 2f       	mov	r22, r23
 316:	78 2f       	mov	r23, r24
 318:	88 27       	eor	r24, r24
 31a:	b8 5f       	subi	r27, 0xF8	; 248
 31c:	39 f0       	breq	.+14     	; 0x32c <__fixunssfsi+0x46>
 31e:	b9 3f       	cpi	r27, 0xF9	; 249
 320:	cc f3       	brlt	.-14     	; 0x314 <__fixunssfsi+0x2e>
 322:	86 95       	lsr	r24
 324:	77 95       	ror	r23
 326:	67 95       	ror	r22
 328:	b3 95       	inc	r27
 32a:	d9 f7       	brne	.-10     	; 0x322 <__fixunssfsi+0x3c>
 32c:	3e f4       	brtc	.+14     	; 0x33c <__fixunssfsi+0x56>
 32e:	90 95       	com	r25
 330:	80 95       	com	r24
 332:	70 95       	com	r23
 334:	61 95       	neg	r22
 336:	7f 4f       	sbci	r23, 0xFF	; 255
 338:	8f 4f       	sbci	r24, 0xFF	; 255
 33a:	9f 4f       	sbci	r25, 0xFF	; 255
 33c:	08 95       	ret

0000033e <__floatunsisf>:
 33e:	e8 94       	clt
 340:	09 c0       	rjmp	.+18     	; 0x354 <__floatsisf+0x12>

00000342 <__floatsisf>:
 342:	97 fb       	bst	r25, 7
 344:	3e f4       	brtc	.+14     	; 0x354 <__floatsisf+0x12>
 346:	90 95       	com	r25
 348:	80 95       	com	r24
 34a:	70 95       	com	r23
 34c:	61 95       	neg	r22
 34e:	7f 4f       	sbci	r23, 0xFF	; 255
 350:	8f 4f       	sbci	r24, 0xFF	; 255
 352:	9f 4f       	sbci	r25, 0xFF	; 255
 354:	99 23       	and	r25, r25
 356:	a9 f0       	breq	.+42     	; 0x382 <__floatsisf+0x40>
 358:	f9 2f       	mov	r31, r25
 35a:	96 e9       	ldi	r25, 0x96	; 150
 35c:	bb 27       	eor	r27, r27
 35e:	93 95       	inc	r25
 360:	f6 95       	lsr	r31
 362:	87 95       	ror	r24
 364:	77 95       	ror	r23
 366:	67 95       	ror	r22
 368:	b7 95       	ror	r27
 36a:	f1 11       	cpse	r31, r1
 36c:	f8 cf       	rjmp	.-16     	; 0x35e <__floatsisf+0x1c>
 36e:	fa f4       	brpl	.+62     	; 0x3ae <__floatsisf+0x6c>
 370:	bb 0f       	add	r27, r27
 372:	11 f4       	brne	.+4      	; 0x378 <__floatsisf+0x36>
 374:	60 ff       	sbrs	r22, 0
 376:	1b c0       	rjmp	.+54     	; 0x3ae <__floatsisf+0x6c>
 378:	6f 5f       	subi	r22, 0xFF	; 255
 37a:	7f 4f       	sbci	r23, 0xFF	; 255
 37c:	8f 4f       	sbci	r24, 0xFF	; 255
 37e:	9f 4f       	sbci	r25, 0xFF	; 255
 380:	16 c0       	rjmp	.+44     	; 0x3ae <__floatsisf+0x6c>
 382:	88 23       	and	r24, r24
 384:	11 f0       	breq	.+4      	; 0x38a <__floatsisf+0x48>
 386:	96 e9       	ldi	r25, 0x96	; 150
 388:	11 c0       	rjmp	.+34     	; 0x3ac <__floatsisf+0x6a>
 38a:	77 23       	and	r23, r23
 38c:	21 f0       	breq	.+8      	; 0x396 <__floatsisf+0x54>
 38e:	9e e8       	ldi	r25, 0x8E	; 142
 390:	87 2f       	mov	r24, r23
 392:	76 2f       	mov	r23, r22
 394:	05 c0       	rjmp	.+10     	; 0x3a0 <__floatsisf+0x5e>
 396:	66 23       	and	r22, r22
 398:	71 f0       	breq	.+28     	; 0x3b6 <__floatsisf+0x74>
 39a:	96 e8       	ldi	r25, 0x86	; 134
 39c:	86 2f       	mov	r24, r22
 39e:	70 e0       	ldi	r23, 0x00	; 0
 3a0:	60 e0       	ldi	r22, 0x00	; 0
 3a2:	2a f0       	brmi	.+10     	; 0x3ae <__floatsisf+0x6c>
 3a4:	9a 95       	dec	r25
 3a6:	66 0f       	add	r22, r22
 3a8:	77 1f       	adc	r23, r23
 3aa:	88 1f       	adc	r24, r24
 3ac:	da f7       	brpl	.-10     	; 0x3a4 <__floatsisf+0x62>
 3ae:	88 0f       	add	r24, r24
 3b0:	96 95       	lsr	r25
 3b2:	87 95       	ror	r24
 3b4:	97 f9       	bld	r25, 7
 3b6:	08 95       	ret

000003b8 <__fp_inf>:
 3b8:	97 f9       	bld	r25, 7
 3ba:	9f 67       	ori	r25, 0x7F	; 127
 3bc:	80 e8       	ldi	r24, 0x80	; 128
 3be:	70 e0       	ldi	r23, 0x00	; 0
 3c0:	60 e0       	ldi	r22, 0x00	; 0
 3c2:	08 95       	ret

000003c4 <__fp_nan>:
 3c4:	9f ef       	ldi	r25, 0xFF	; 255
 3c6:	80 ec       	ldi	r24, 0xC0	; 192
 3c8:	08 95       	ret

000003ca <__fp_pscA>:
 3ca:	00 24       	eor	r0, r0
 3cc:	0a 94       	dec	r0
 3ce:	16 16       	cp	r1, r22
 3d0:	17 06       	cpc	r1, r23
 3d2:	18 06       	cpc	r1, r24
 3d4:	09 06       	cpc	r0, r25
 3d6:	08 95       	ret

000003d8 <__fp_pscB>:
 3d8:	00 24       	eor	r0, r0
 3da:	0a 94       	dec	r0
 3dc:	12 16       	cp	r1, r18
 3de:	13 06       	cpc	r1, r19
 3e0:	14 06       	cpc	r1, r20
 3e2:	05 06       	cpc	r0, r21
 3e4:	08 95       	ret

000003e6 <__fp_round>:
 3e6:	09 2e       	mov	r0, r25
 3e8:	03 94       	inc	r0
 3ea:	00 0c       	add	r0, r0
 3ec:	11 f4       	brne	.+4      	; 0x3f2 <__fp_round+0xc>
 3ee:	88 23       	and	r24, r24
 3f0:	52 f0       	brmi	.+20     	; 0x406 <__fp_round+0x20>
 3f2:	bb 0f       	add	r27, r27
 3f4:	40 f4       	brcc	.+16     	; 0x406 <__fp_round+0x20>
 3f6:	bf 2b       	or	r27, r31
 3f8:	11 f4       	brne	.+4      	; 0x3fe <__fp_round+0x18>
 3fa:	60 ff       	sbrs	r22, 0
 3fc:	04 c0       	rjmp	.+8      	; 0x406 <__fp_round+0x20>
 3fe:	6f 5f       	subi	r22, 0xFF	; 255
 400:	7f 4f       	sbci	r23, 0xFF	; 255
 402:	8f 4f       	sbci	r24, 0xFF	; 255
 404:	9f 4f       	sbci	r25, 0xFF	; 255
 406:	08 95       	ret

00000408 <__fp_split3>:
 408:	57 fd       	sbrc	r21, 7
 40a:	90 58       	subi	r25, 0x80	; 128
 40c:	44 0f       	add	r20, r20
 40e:	55 1f       	adc	r21, r21
 410:	59 f0       	breq	.+22     	; 0x428 <__fp_splitA+0x10>
 412:	5f 3f       	cpi	r21, 0xFF	; 255
 414:	71 f0       	breq	.+28     	; 0x432 <__fp_splitA+0x1a>
 416:	47 95       	ror	r20

00000418 <__fp_splitA>:
 418:	88 0f       	add	r24, r24
 41a:	97 fb       	bst	r25, 7
 41c:	99 1f       	adc	r25, r25
 41e:	61 f0       	breq	.+24     	; 0x438 <__fp_splitA+0x20>
 420:	9f 3f       	cpi	r25, 0xFF	; 255
 422:	79 f0       	breq	.+30     	; 0x442 <__fp_splitA+0x2a>
 424:	87 95       	ror	r24
 426:	08 95       	ret
 428:	12 16       	cp	r1, r18
 42a:	13 06       	cpc	r1, r19
 42c:	14 06       	cpc	r1, r20
 42e:	55 1f       	adc	r21, r21
 430:	f2 cf       	rjmp	.-28     	; 0x416 <__fp_split3+0xe>
 432:	46 95       	lsr	r20
 434:	f1 df       	rcall	.-30     	; 0x418 <__fp_splitA>
 436:	08 c0       	rjmp	.+16     	; 0x448 <__fp_splitA+0x30>
 438:	16 16       	cp	r1, r22
 43a:	17 06       	cpc	r1, r23
 43c:	18 06       	cpc	r1, r24
 43e:	99 1f       	adc	r25, r25
 440:	f1 cf       	rjmp	.-30     	; 0x424 <__fp_splitA+0xc>
 442:	86 95       	lsr	r24
 444:	71 05       	cpc	r23, r1
 446:	61 05       	cpc	r22, r1
 448:	08 94       	sec
 44a:	08 95       	ret

0000044c <__fp_zero>:
 44c:	e8 94       	clt

0000044e <__fp_szero>:
 44e:	bb 27       	eor	r27, r27
 450:	66 27       	eor	r22, r22
 452:	77 27       	eor	r23, r23
 454:	cb 01       	movw	r24, r22
 456:	97 f9       	bld	r25, 7
 458:	08 95       	ret

0000045a <_exit>:
 45a:	f8 94       	cli

0000045c <__stop_program>:
 45c:	ff cf       	rjmp	.-2      	; 0x45c <__stop_program>
